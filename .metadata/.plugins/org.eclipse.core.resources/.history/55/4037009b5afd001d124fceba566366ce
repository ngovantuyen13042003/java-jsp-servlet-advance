package st.nvt.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import st.nvt.dao.IGenericDAO;
import st.nvt.mapper.RowMapper;
import st.nvt.utils.JDBCUtil;

public class AbstractDAO<T> implements IGenericDAO<T>{

//	public List<T> query(String  sql , RowMapper<T> rowMapper){
//		List<T> result = new ArrayList<>();
//		try(Connection con = JDBCUtil.getConnection();
//				PreparedStatement ps = con.prepareStatement(sql)) {
//			ResultSet rs= ps.executeQuery();
//			while(rs.next()) {
//				result.add(rowMapper.mapprow(rs));
//			}
//			return result;
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		return null;
//	}

	@Override
	public List<T> query(String sql, RowMapper<T> rowMapper, Object... params) {
		List<T> result = new ArrayList<>();
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			con = JDBCUtil.getConnection();
			ps = con.prepareStatement(sql);
			setParams();
			rs = ps.executeQuery();
			while (en.hasMoreElements()) {
				type type = (type) en.nextElement();
				
			}
			
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		
		return null;
	}
	
	public void setParams() {
		
	}
}

















